" load pathogen bundles
" @see https://github.com/tpope/vim-pathogen
runtime bundle/pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

runtime autoload/util.vim

"-------------------------------------------------------------------------------
" GENERAL PREFERENCES
"-------------------------------------------------------------------------------

" automatically reload vimrc upon save
au! BufWritePost .vimrc source %

" we're running Vim, not Vi!
set nocompatible          

" enable syntax highlighting
syntax on

" enable filetype-specific indenting and plugins
filetype plugin indent on

" show line numbers
set number

" ignore certain extensions and locations (affects CtrlP)
set wildignore+=*/.svn,*/.git
set wildignore+=*/cache,*/web
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg,*.JPG,*.BMP,*.GIF,*.PNG,*.JPEG

" autocomplete: pick longest match first, then cycle through list
set wildmode=longest,list,full

" no toolbar, menu, or right scroll bar (in gvim)
set guioptions-=T
set guioptions-=m
set guioptions-=r

" set a nice default font
set guifont=Source\ Code\ Pro\ Light:h13

" prevent overflowing output when doing find-in-files
set nomore	

" show matching parenteses
set noshowmatch

" incremental search
set incsearch	

" highlight search result
set hlsearch

" case insensitive search
set noignorecase

" back to case sensitive for searches containing UPPERCASE
set nosmartcase

" automatically scroll so that at least this lines are above or below cursor
set scrolloff=5 

" use spaces instead of tabs
set expandtab

" start new line at appropriate indentation level
set smartindent

" make tab bar always visible (to prevent annoying appearing/disappearing)
set showtabline=2

" shorten waiting for mapping disambiguation
set timeoutlen=200

" wrap words visually
set lbr 

" enable mouse in xterm
set mouse=a

" use the system clipboard with vim
set clipboard=unnamed

" disable folding
set nofoldenable

" prefer to place swap file in ~/tmp if possible
" \\ indicates that the swap file name will be build from complete path
set directory=~/tmp//,.

"-------------------------------------------------------------------------------
" PLUGIN CONFIGURATION
"-------------------------------------------------------------------------------

autocmd BufReadPost * :DetectIndent

" Syntastic - disable syntax checking on twig files
let g:syntastic_mode_map = { 
    \ 'mode' : 'active', 
    \ 'active_filetypes' : [], 
    \ 'passive_filetypes': ['twig'] 
\ }

" CtrlP - just use the current working directory
let g:ctrlp_working_path_mode = '0'

" CtrlP - open in new tab by default
let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<c-t>', '<2-LeftMouse>'],
    \ 'AcceptSelection("t")': ['<cr>'],
\ }

" CtrlP - set size and position
let g:ctrlp_match_window = 'bottom,order:btt,min:15,max:15,results:50'

" CtrlP - follow symlinks
let g:ctrlp_follow_symlinks = 1

" Color overrides
let g:jellybeans_overrides = {
   \ 'Comment':     { 'guifg': 'A1A1A1' },
   \ 'Constant':    { 'guifg': 'FFA0A0' },
   \ 'Define':      { 'guifg': 'FFD700', 'attr': 'bold' },
   \ 'Identifier':  { 'guifg': 'E9967A' },
   \ 'IncSearch':   { 'guibg': '666666' },
   \ 'LineNr':      { 'guifg': '666666', 'guibg': '232323' },
   \ 'Normal':      { 'guifg': 'E5E5E5', 'guibg': '232323' },
   \ 'NonText':     { 'guibg': '232323' },
   \ 'Operator':    { 'guifg': 'FF0000' },
   \ 'Search':      { 'guibg': 'A0522D', 'guifg': 'FFFFFF' },
   \ 'Statement':   { 'guifg': '6495ED', 'attr': 'bold' },
   \ 'TabLine':     { 'guifg': 'CCCCCC', 'guibg': '3D3D3D' },
   \ 'TabLineFill': { 'guibg': '3D3D3D' },
   \ 'TabLineSel':  { 'guifg': 'FFFFFF', 'guibg': '666666' },
\ }

" set colour scheme (must be after overrides)
if $TERM == 'xterm-256color'
   set t_Co=256
   colorscheme jellybeans
endif

"-------------------------------------------------------------------------------
" KEYBOARD 
"-------------------------------------------------------------------------------

" map leader and often-used shortcuts
let mapleader=","
noremap <Leader>t :call util#BeginFinder()<CR>
noremap <Leader>g :CtrlPClearCache<CR>:call util#BeginFinder()<CR>
noremap <Leader>a :Align
noremap <Leader>r :UtilPowerReplace 
noremap <Leader>q :UtilQuickfixToArgs<CR>
noremap <Leader>f :Ack --ignore-dir=cache --ignore-dir=vendor --ignore-dir=web -i 

" use Ctrl+q for the usual Ctrl+w
nnoremap <C-q> <C-w>

" use Ctrl+k and Ctrl+j to switch between open tabs, Ctrl+w to close
noremap <C-k> gT
noremap <C-j> gt
noremap <C-w> :tabclose<CR>

" use Ctrl+n to save and then hop to next quickfix item
noremap <C-n> :w<CR>:cn<CR>

" write to file
noremap <Leader><Leader> :w<CR>

" cut, copy, paste
noremap <Leader>x "+x
noremap <Leader>c "+y
noremap <Leader>v "+gP

" delete without destroying buffer
noremap <Leader>d "_d

" switch to usual indents
noremap <Leader>4 :set tabstop=8 softtabstop=4 shiftwidth=4 expandtab<CR>
noremap <Leader>2 :set tabstop=4 softtabstop=2 shiftwidth=2 expandtab<CR>

" pull full path name into paste buffer for attachment to email etc
nnoremap <Leader>p :let @*=expand("%")<CR>

" use Tab to initiate autocomplete
inoremap <Tab> <C-n>

" enable easy line indenting by pressing > or <, instead of >> or <<.
nnoremap > >>
nnoremap < <<

" preserve selection after (un-)indenting selected lines.
vnoremap > >gv
vnoremap < <gv

" launch nerd tree
noremap <Leader>b :NERDTreeToggle<CR>
let g:NERDTreeDirArrows=0

" command shortcuts
command! -range=% TidyCSS :<line1>,<line2>!css-quick-format
command! -range=% TidyHTML :<line1>,<line2>!tidy -i -q -xml -w 0
noremap <Leader>s :TidyCSS<CR>
noremap <Leader>h :TidyHTML<CR>
