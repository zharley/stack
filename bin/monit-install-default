#! /bin/bash
set -e

# check for presence of parameters
if [ -z "$1" ] || [ -z "$2" ]; then
    echo "Usage: `basename $0` user@example.com /dev/xvda1"
    exit 1
fi

MY_EMAIL="$1"
MY_HDD_DEVICE="$2"
MY_DEFAULT_MONIT="/etc/default/monit"
MY_MONITRC="/etc/monit/monitrc"
MY_BACKUP_EXT=".`date +%Y-%m-%d`.old"

apt-get --no-install-recommends install monit

echo "=> Setting startup=1 in $MY_DEFAULT_MONIT"
sed --in-place="$MY_BACKUP_EXT" "s:^startup=0$:startup=1:" $MY_DEFAULT_MONIT

echo "=> Backing up $MY_MONITRC as $MY_MONITRC$MY_BACKUP_EXT"
mv $MY_MONITRC $MY_MONITRC$MY_BACKUP_EXT

echo "=> Writing $MY_MONITRC"
cat > $MY_MONITRC << EOF
# check every minute
set daemon 60

# recipient
set alert $MY_EMAIL

# name of a file to dump messages to
set logfile /var/log/monit.log

# mailserver used for sending alert
set mailserver localhost

# specify format for email
set mail-format {
  from: monit@\$HOST
  subject: \$HOST: \$EVENT
  message:
Service:     \$SERVICE
Date:        \$DATE
Host:        \$HOST
Action:      \$ACTION
Description: \$DESCRIPTION
}

# check load, memory, cpu
check system localhost
  if loadavg (1min) > 3 then alert
  if loadavg (5min) > 2 then alert
  if memory usage > 75% then alert
  if swap usage > 25% then alert
  if cpu usage (user) > 70% then alert
  if cpu usage (system) > 30% then alert
  if cpu usage (wait) > 20% then alert

# check hard drive
check filesystem rootfs with path $MY_HDD_DEVICE
  if space usage > 80% for 5 times within 15 cycles
    then alert else if succeeded for 10 cycles then alert
EOF

chmod 600 $MY_MONITRC

cat $MY_MONITRC

/etc/init.d/monit restart

echo "=> Done."
