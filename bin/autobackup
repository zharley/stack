#! /bin/bash
set -e

# check for presence of parameters
if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]; then
  echo "Usage: `basename $0` \"sources\" destination max [temp-mysql-dump-location]"
  echo "  e.g. `basename $0` \"/var/log/nginx /etc/nginx\" /root/backup 5 /root/all-databases.sql"
  exit 1
fi

MY_SOURCES="$1"
MY_DESTINATION="$2"
MY_MAX="$3"
MY_DUMP_LOCATION="$4"

# clear old backup files
cd $MY_DESTINATION
if ls -t *.tar.gz > /dev/null; then
  rm -f `ls -t *.tar.gz | awk "NR>$((MY_MAX-1))"`
fi

# datestamp-derive a new archive file
MY_BASE="`date +%Y-%m-%d`.tar.gz"

if [ -n "$MY_DUMP_LOCATION" ]; then
  # select all databases except system ones
  MY_SCHEMAS=$(mysql -NBe 'show schemas'| grep -wv 'mysql\|performance_schema\|information_schema')

  # dump databases to file
  mysqldump --databases $MY_SCHEMAS > $MY_DUMP_LOCATION

  # add to souces to be zipped
  MY_SOURCES="$MY_SOURCES $MY_DUMP_LOCATION"
fi

# delete the archive file if it exists
rm -f "$MY_BASE"

# c   create a new archive
# z   filter the archive through gzip
# f   use archive file or device
# P   absolute names (don't strip leading /)
tar czfP $MY_BASE $MY_SOURCES
